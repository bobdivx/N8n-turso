#!/bin/bash

# Script de d√©ploiement distant pour le node Turso N8N
# Ce script transf√®re et ex√©cute automatiquement le d√©ploiement sur le serveur N8N

set -e

# Configuration du serveur
SERVER_IP="10.1.2.59"
SERVER_USER="root"
SERVER_PASSWORD="8tc6vr89"
N8N_URL="http://10.1.2.59:5678/"

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

echo "üöÄ D√©ploiement automatique du node Turso sur N8N"
echo "üìç Serveur: $SERVER_IP"
echo "üë§ Utilisateur: $SERVER_USER"
echo "üåê N8N URL: $N8N_URL"
echo ""

# V√©rifier que sshpass est install√©
if ! command -v sshpass &> /dev/null; then
    log_error "sshpass n'est pas install√©. Installation en cours..."
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        sudo apt-get update && sudo apt-get install -y sshpass
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        brew install hudochenkov/sshpass/sshpass
    else
        log_error "Impossible d'installer sshpass automatiquement. Veuillez l'installer manuellement."
        exit 1
    fi
fi

# V√©rifier la connectivit√© au serveur
log_info "V√©rification de la connectivit√© au serveur..."
if ! ping -c 1 $SERVER_IP &> /dev/null; then
    log_error "Impossible de joindre le serveur $SERVER_IP"
    exit 1
fi
log_success "Serveur accessible"

# Transf√©rer le script de d√©ploiement
log_info "Transfert du script de d√©ploiement..."
if sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no deploy-auto.sh $SERVER_USER@$SERVER_IP:/tmp/; then
    log_success "Script transf√©r√© avec succ√®s"
else
    log_error "√âchec du transfert du script"
    exit 1
fi

# Rendre le script ex√©cutable et l'ex√©cuter
log_info "Ex√©cution du script de d√©ploiement sur le serveur..."
sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
chmod +x /tmp/deploy-auto.sh
cd /tmp
./deploy-auto.sh
EOF

# V√©rifier le statut du d√©ploiement
log_info "V√©rification du statut du d√©ploiement..."
if sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "test -f /root/.n8n/custom/Turso.node.js"; then
    log_success "‚úÖ D√©ploiement r√©ussi !"
    echo ""
    echo "üéâ Votre node Turso est maintenant disponible dans N8N !"
    echo ""
    echo "üìã Prochaines √©tapes:"
    echo "1. Acc√©dez √† l'interface N8N: $N8N_URL"
    echo "2. Cr√©ez un nouveau workflow"
    echo "3. Ajoutez un nouveau node et recherchez 'Turso'"
    echo "4. Configurez vos credentials Turso"
    echo "5. Testez avec une requ√™te simple: SELECT 1 as test;"
    echo ""
    echo "üîß Configuration des credentials:"
    echo "   - Database URL: libsql://your-database.turso.io"
    echo "   - Auth Token: Votre token Turso"
    echo ""
    echo "üìä Fonctionnalit√©s disponibles:"
    echo "   - Requ√™tes SQL personnalis√©es"
    echo "   - Cr√©ation/suppression de tables"
    echo "   - Insertion/modification/suppression de donn√©es"
    echo ""
    echo "üöÄ Bon d√©veloppement avec votre node Turso !"
    
    # Nettoyer le script temporaire
    sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "rm -f /tmp/deploy-auto.sh"
    
else
    log_error "‚ùå D√©ploiement √©chou√©"
    echo ""
    echo "üîç V√©rifiez les logs sur le serveur:"
    echo "   ssh $SERVER_USER@$SERVER_IP"
    echo "   journalctl -u n8n -f"
    exit 1
fi
