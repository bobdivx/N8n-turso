#!/bin/bash

# üöÄ Script de d√©ploiement automatique du node Turso pour N8N
# üìç Version corrig√©e avec gestion Git et d√©ploiement robuste

set -e  # Arr√™ter en cas d'erreur

echo "üöÄ D√©ploiement automatique du node Turso pour N8N"
echo "üìç Serveur: $(hostname -I | awk '{print $1}'):5678"
echo "‚è∞ $(date)"
echo ""

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction de log color√©
log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

# Fonction de nettoyage en cas d'erreur
cleanup() {
    log_error "Erreur d√©tect√©e, nettoyage en cours..."
    if [ -d "/tmp/turso-deploy" ]; then
        rm -rf /tmp/turso-deploy
    fi
    exit 1
}

trap cleanup ERR

# 1. V√©rification de la connectivit√© r√©seau
log_info "V√©rification de la connectivit√© r√©seau..."
if ping -c 1 8.8.8.8 >/dev/null 2>&1; then
    log_success "Connectivit√© Internet OK"
else
    log_error "Pas de connectivit√© Internet"
    exit 1
fi

# 2. V√©rification de Node.js
log_info "V√©rification de Node.js..."
if command -v node >/dev/null 2>&1; then
    NODE_VERSION=$(node --version)
    log_success "Node.js d√©j√† install√©: $NODE_VERSION"
else
    log_info "Installation de Node.js..."
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    apt-get install -y nodejs
    log_success "Node.js install√©: $(node --version)"
fi

# 3. V√©rification de npm
if command -v npm >/dev/null 2>&1; then
    log_success "npm disponible: $(npm --version)"
else
    log_error "npm non disponible"
    exit 1
fi

# 4. Cr√©ation du r√©pertoire des nodes personnalis√©s
log_info "Cr√©ation du r√©pertoire: /root/.n8n/custom"
mkdir -p /root/.n8n/custom

# 5. Gestion du repository Git
log_info "Gestion du repository Git..."
cd /root/N8n-turso

# V√©rifier si le repository existe et est √† jour
if [ -d ".git" ]; then
    log_info "Repository Git d√©tect√©, mise √† jour..."
    git fetch origin
    git reset --hard origin/main 2>/dev/null || git reset --hard origin/master 2>/dev/null || git reset --hard HEAD
    log_success "Repository mis √† jour"
else
    log_error "Repository Git non trouv√© dans /root/N8n-turso"
    exit 1
fi

# 6. Aller dans le dossier du projet
cd n8n-nodes-turso
if [ ! -f "package.json" ]; then
    log_error "package.json non trouv√© dans n8n-nodes-turso"
    exit 1
fi

# 7. Nettoyage et installation des d√©pendances
log_info "Nettoyage et installation des d√©pendances..."
rm -rf node_modules package-lock.json
npm cache clean --force
npm install

# 8. Compilation du projet
log_info "Compilation du projet..."
npm run build

# 9. V√©rification de la compilation
if [ ! -d "dist" ] || [ ! -f "dist/nodes/Turso.node.js" ]; then
    log_error "Compilation √©chou√©e - fichiers manquants"
    ls -la dist/ 2>/dev/null || echo "Dossier dist/ non trouv√©"
    exit 1
fi

log_success "Compilation r√©ussie !"

# 10. Copie des fichiers compil√©s
log_info "Copie des fichiers compil√©s..."
cp -r dist/* /root/.n8n/custom/

# 11. V√©rification de la copie
log_info "V√©rification de la copie..."
if [ -f "/root/.n8n/custom/nodes/Turso.node.js" ] && [ -f "/root/.n8n/custom/credentials/TursoApi.credentials.js" ]; then
    log_success "Fichiers copi√©s avec succ√®s"
else
    log_error "√âchec de la copie des fichiers"
    ls -la /root/.n8n/custom/
    exit 1
fi

# 12. Configuration de N8N
log_info "Configuration de N8N pour les nodes personnalis√©s..."

# V√©rifier si la variable est d√©j√† configur√©e
if ! grep -q "N8N_CUSTOM_EXTENSIONS_PATH" /etc/systemd/system/n8n.service; then
    log_info "Ajout de la variable d'environnement..."
    sed -i '/\[Service\]/a Environment="N8N_CUSTOM_EXTENSIONS_PATH=/root/.n8n/custom"' /etc/systemd/system/n8n.service
    systemctl daemon-reload
    log_success "Variable d'environnement ajout√©e"
else
    log_success "La variable d'environnement est d√©j√† configur√©e"
fi

# 13. Red√©marrage de N8N
log_info "Red√©marrage de N8N pour charger le nouveau node..."
systemctl restart n8n

# 14. Attendre que N8N red√©marre
log_info "Attente du red√©marrage de N8N..."
sleep 15

# 15. V√©rification finale
log_info "V√©rification finale..."
if systemctl is-active --quiet n8n; then
    log_success "N8N est actif"
    
    # V√©rifier que les fichiers sont toujours pr√©sents
    if [ -f "/root/.n8n/custom/nodes/Turso.node.js" ]; then
        log_success "Node Turso d√©ploy√© avec succ√®s !"
        echo ""
        echo "üéâ D√©ploiement termin√© avec succ√®s !"
        echo "üìã Prochaines √©tapes:"
        echo "1. Acc√©dez √† http://$(hostname -I | awk '{print $1}'):5678/"
        echo "2. Cr√©ez un nouveau workflow"
        echo "3. Ajoutez un nouveau node"
        echo "4. Recherchez 'Turso' dans la liste"
        echo ""
        echo "üìÅ Fichiers d√©ploy√©s:"
        ls -la /root/.n8n/custom/
    else
        log_error "Fichiers du node manquants apr√®s red√©marrage"
        exit 1
    fi
else
    log_error "N8N n'est pas actif apr√®s red√©marrage"
    systemctl status n8n
    exit 1
fi

log_success "D√©ploiement termin√© avec succ√®s ! üöÄ"
